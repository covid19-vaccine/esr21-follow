# Generated by Django 3.1.4 on 2021-10-07 04:45

import _socket
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_crypto_fields.fields.encrypted_text_field
import django_crypto_fields.fields.firstname_field
import django_revision.revision_field
import edc_base.model_fields.custom_fields
import edc_base.model_fields.hostname_modification_field
import edc_base.model_fields.userfield
import edc_base.model_fields.uuid_auto_field
import edc_base.model_validators.date
import edc_base.utils
import edc_protocol.validators
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('esr21_follow', '0004_auto_20211007_0146'),
    ]

    operations = [
        migrations.CreateModel(
            name='Call',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_identifier', models.CharField(max_length=50)),
                ('label', models.CharField(max_length=50)),
                ('repeats', models.BooleanField(default=False)),
                ('call_datetime', models.DateTimeField(editable=False, help_text='last call datetime updated by call log entry', null=True)),
                ('first_name', django_crypto_fields.fields.firstname_field.FirstnameField(blank=True, editable=False, help_text=' (Encryption: RSA local)', max_length=71, null=True, verbose_name='First name')),
                ('initials', models.CharField(editable=False, max_length=3, null=True, verbose_name='Initials')),
                ('consent_datetime', models.DateTimeField(help_text='From Subject Consent.', null=True, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Consent date and time')),
                ('call_attempts', models.IntegerField(default=0)),
                ('call_outcome', models.TextField(max_length=150, null=True)),
                ('call_status', models.CharField(choices=[('NEW', 'New'), ('open', 'Open'), ('closed', 'Closed')], default='NEW', max_length=15)),
                ('auto_closed', models.BooleanField(default=False, editable=False, help_text='If True call status was changed to CLOSED by EDC.')),
                ('scheduled', models.DateTimeField(default=edc_base.utils.get_utcnow)),
                ('visit_code', models.CharField(editable=False, max_length=25, null=True)),
            ],
            options={
                'abstract': False,
                'unique_together': {('subject_identifier', 'label', 'scheduled')},
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('log_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('locator_information', django_crypto_fields.fields.encrypted_text_field.EncryptedTextField(blank=True, help_text='This information has been imported from the previous locator. You may update as required. (Encryption: AES local)', max_length=71, null=True)),
                ('contact_notes', django_crypto_fields.fields.encrypted_text_field.EncryptedTextField(blank=True, help_text=' (Encryption: AES local)', max_length=71, null=True)),
                ('call', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='esr21_follow.call')),
            ],
            options={
                'abstract': False,
                'unique_together': {('log_datetime', 'call')},
            },
        ),
        migrations.CreateModel(
            name='ReasonsUnwilling',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, unique=True, verbose_name='Name')),
                ('short_name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, unique=True, verbose_name='Stored value')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
            ],
            options={
                'ordering': ['display_index', 'name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LogEntry',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_identifier', models.CharField(blank=True, max_length=50, null=True, verbose_name='Subject Identifier')),
                ('call_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, validators=[edc_base.model_validators.date.datetime_not_future], verbose_name='Date of contact attempt')),
                ('phone_num_type', multiselectfield.db.fields.MultiSelectField(choices=[('subject_cell', 'subject_cell'), ('subject_cell_alt', 'subject_cell_alt'), ('subject_phone', 'subject_phone'), ('subject_phone_alt', 'subject_phone_alt'), ('subject_work_phone', 'subject_work_phone'), ('indirect_contact_cell', 'indirect_contact_cell'), ('indirect_contact_phone', 'indirect_contact_phone'), ('caretaker_cell', 'caretaker_cell'), ('caretaker_tel', 'caretaker_tel')], max_length=154, verbose_name='Which phone number(s) was used for contact?')),
                ('phone_num_success', multiselectfield.db.fields.MultiSelectField(choices=[('subject_cell', 'subject_cell'), ('subject_cell_alt', 'subject_cell_alt'), ('subject_phone', 'subject_phone'), ('subject_phone_alt', 'subject_phone_alt'), ('subject_work_phone', 'subject_work_phone'), ('indirect_contact_cell', 'indirect_contact_cell'), ('indirect_contact_phone', 'indirect_contact_phone'), ('caretaker_cell', 'caretaker_cell'), ('caretaker_tel', 'caretaker_tel'), ('none_of_the_above', 'None of the above')], max_length=172, verbose_name='Which number(s) were you successful in reaching?')),
                ('cell_contact_fail', models.CharField(choices=[('no_response', 'Phone rang, no response but voicemail left'), ('no_response_vm_not_left', 'Phone rang no response and no option to leave voicemail'), ('disconnected', 'Phone did not ring/number disconnected'), ('number_changed', 'No longer the phone number of BHP participant'), ('N/A', 'Not Applicable')], default='N/A', max_length=100, verbose_name='Why was the contact to [ ] unsuccessful?')),
                ('alt_cell_contact_fail', models.CharField(choices=[('no_response', 'Phone rang, no response but voicemail left'), ('no_response_vm_not_left', 'Phone rang no response and no option to leave voicemail'), ('disconnected', 'Phone did not ring/number disconnected'), ('number_changed', 'No longer the phone number of BHP participant'), ('N/A', 'Not Applicable')], default='N/A', max_length=100, verbose_name='Why was the contact to [ ] unsuccessful?')),
                ('tel_contact_fail', models.CharField(choices=[('no_response', 'Phone rang, no response but voicemail left'), ('no_response_vm_not_left', 'Phone rang no response and no option to leave voicemail'), ('disconnected', 'Phone did not ring/number disconnected'), ('number_changed', 'No longer the phone number of BHP participant'), ('N/A', 'Not Applicable')], default='N/A', max_length=100, verbose_name='Why was the contact to [ ] unsuccessful?')),
                ('alt_tel_contact_fail', models.CharField(choices=[('no_response', 'Phone rang, no response but voicemail left'), ('no_response_vm_not_left', 'Phone rang no response and no option to leave voicemail'), ('disconnected', 'Phone did not ring/number disconnected'), ('number_changed', 'No longer the phone number of BHP participant'), ('N/A', 'Not Applicable')], default='N/A', max_length=100, verbose_name='Why was the contact to [ ] unsuccessful?')),
                ('work_contact_fail', models.CharField(choices=[('no_response', 'Phone rang, no response but voicemail left'), ('no_response_vm_not_left', 'Phone rang no response and no option to leave voicemail'), ('disconnected', 'Phone did not ring/number disconnected'), ('number_changed', 'No longer the phone number of BHP participant'), ('N/A', 'Not Applicable')], default='N/A', max_length=100, verbose_name='Why was the contact to [ ] unsuccessful?')),
                ('cell_alt_contact_fail', models.CharField(choices=[('no_response', 'Phone rang, no response but voicemail left'), ('no_response_vm_not_left', 'Phone rang no response and no option to leave voicemail'), ('disconnected', 'Phone did not ring/number disconnected'), ('number_changed', 'No longer the phone number of BHP participant'), ('N/A', 'Not Applicable')], default='N/A', max_length=100, verbose_name='Why was the contact to [ ] unsuccessful?')),
                ('tel_alt_contact_fail', models.CharField(choices=[('no_response', 'Phone rang, no response but voicemail left'), ('no_response_vm_not_left', 'Phone rang no response and no option to leave voicemail'), ('disconnected', 'Phone did not ring/number disconnected'), ('number_changed', 'No longer the phone number of BHP participant'), ('N/A', 'Not Applicable')], default='N/A', max_length=100, verbose_name='Why was the contact to [ ] unsuccessful?')),
                ('cell_resp_person_fail', models.CharField(choices=[('no_response', 'Phone rang, no response but voicemail left'), ('no_response_vm_not_left', 'Phone rang no response and no option to leave voicemail'), ('disconnected', 'Phone did not ring/number disconnected'), ('number_changed', 'No longer the phone number of BHP participant'), ('N/A', 'Not Applicable')], default='N/A', max_length=100, verbose_name='Why was the contact to [ ] unsuccessful?')),
                ('tel_resp_person_fail', models.CharField(choices=[('no_response', 'Phone rang, no response but voicemail left'), ('no_response_vm_not_left', 'Phone rang no response and no option to leave voicemail'), ('disconnected', 'Phone did not ring/number disconnected'), ('number_changed', 'No longer the phone number of BHP participant'), ('N/A', 'Not Applicable')], default='N/A', max_length=100, verbose_name='Why was the contact to [ ] unsuccessful?')),
                ('appt', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('thinking', 'Still thinking'), ('N/A', 'Not applicable')], default='N/A', max_length=10, verbose_name='Is the participant willing to schedule an appointment')),
                ('appt_reason_unwilling_other', models.CharField(blank=True, max_length=50, null=True, verbose_name='Other reason, please specify ...')),
                ('appt_date', models.DateField(blank=True, help_text='This can only come from the participant.', null=True, validators=[edc_base.model_validators.date.date_is_future], verbose_name='Appointment Date')),
                ('appt_grading', models.CharField(blank=True, choices=[('firm', 'Firm appointment'), ('weak', 'Possible appointment'), ('guess', 'Estimated by RA')], max_length=25, null=True, verbose_name='Is this appointment...')),
                ('appt_location', models.CharField(blank=True, choices=[('home', 'At home'), ('work', 'At work'), ('telephone', 'By telephone'), ('clinic', 'At clinic'), ('OTHER', 'Other location')], max_length=50, null=True, verbose_name='Appointment location')),
                ('appt_location_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=50, null=True, verbose_name='Other location, please specify ...')),
                ('appt_reason_unwilling', models.ManyToManyField(blank=True, to='esr21_follow.ReasonsUnwilling', verbose_name='What is the reason the participant is unwilling to schedule an appointment')),
                ('log', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='esr21_follow.log')),
            ],
            options={
                'verbose_name': 'Call Log Entry',
                'verbose_name_plural': 'Call Log Entries',
                'unique_together': {('call_datetime', 'log')},
            },
        ),
    ]
